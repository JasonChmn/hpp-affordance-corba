// Copyright (C) 2016 CNRS
// Authors:  Anna Seppala
//
// This file is part of the hpp-affordance-corbaserver.
//
// This software is provided "as is" without warranty of any kind,
// either expressed or implied, including but not limited to the
// implied warranties of fitness for a particular purpose.
//
// See the COPYING file for more information.

#ifndef HPP_AFFORDANCE_CORBA_SERVER_IDL
# define HPP_AFFORDANCE_CORBA_SERVER_IDL
# include <hpp/corbaserver/common.idl>
module hpp
{
  typedef sequence<double> doubleSeq;
	typedef sequence<doubleSeq> doubleSeqSeq;
	typedef sequence<doubleSeqSeq> doubleSeqSeqSeq;
	typedef sequence<doubleSeqSeqSeq> doubleSeqSeqSeqSeq;
  module corbaserver {
    module affordance {

      /// Creation of a device.
      interface Afford {

        void testProblemSolver () raises (Error);

				/// creates collisionObjects for each found affordance of 
				/// given object. Affordances are added to a container in problemSolver
        void analyseObject (in string obstacleName) raises (Error);
				
				/// creates collisionObjects for each affordance found in
				/// the scene (goes through all obstacles). Affordances are added to 
				/// a container in problemSolver.
				void analyseAll () raises (Error);

				/// deletes all affordance objects of given obstacle.
				void deleteAffordances (in string obstacleName) raises (Error);

				void deleteAffordancesByType (in string affordance,
					in string obstacleName) raises (Error);

				/// returns vertice points for each triangle in ieach affordance 
				/// of specified aff type
				doubleSeqSeqSeqSeq getAffordancePoints (in string affordance) 
					raises (Error);


			}; // interface Afford
    }; // module affordance
  }; // module corbaserver
}; // module hpp
#endif // HPP_AFFORDANCE_CORBA_SERVER_IDL
